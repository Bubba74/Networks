
todo
1. Track management
* Store multiple tracks (from a folder, share tracks among programs, etc.)
* Easily create complex tracks
- Overlapping? == BIG change.
	- Zed coordinate or simply multiple tracks?
! Switching between different tracks with the same car pool.

2. Improve the calculation of intersecting lines and such
- Represent lines as vectors, and calculate intersections without nasty division by zero
- Store paths (and tracks) as arrays (or lists?) of lines instead of points.
* Paths should be able to rotate (in real time???)

*3. Fix the camera view of the track
* Hint: it should be good

3. Train neural networks off of PID output? (Variable or PWM?)


Recommendations
* Fancy Tracks
* Backgrounds?
* Multiplayer
	- Different server->client relationships
		- Autonomous Control off of ray depths
			- Should server send (32-160 double depths) or
			- Should server send entire track occasionally
		- Manual control (visibility of entire track [and other cars?])
			- Occasionally: Send entire track
			- Loop: Send (x,y,z) of all needed cars
		- Spectator
			- Password?
			- Occasionally: Entire track coordinates
			- Loop: (x,y,z) of all cars (and rays? <- probably not, that's a lot)
* Replace white tracker line with circle over spotlight car

